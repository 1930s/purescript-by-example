// Generated by psc-make version 0.6.9.3
"use strict";
var Prelude = require("Prelude");
var Data_Monoid = require("Data.Monoid");

/**
 *  | Boolean monoid and semigroup under conjunction.
 *  |
 *  | ``` purescript
 *  | All x <> All y == All (x && y)
 *  | mempty :: All == All true
 *  | ```
 */
var All = function (x) {
    return x;
};
var showAll = new Prelude.Show(function (_68) {
    return "All (" + (Prelude.show(Prelude.showBoolean)(_68) + ")");
});
var semigroupAll = new Prelude.Semigroup(function (_69) {
    return function (_70) {
        return _69 && _70;
    };
});
var runAll = function (_61) {
    return _61;
};
var monoidAll = new Data_Monoid.Monoid(function () {
    return semigroupAll;
}, true);
var eqAll = new Prelude.Eq(function (_64) {
    return function (_65) {
        return _64 !== _65;
    };
}, function (_62) {
    return function (_63) {
        return _62 === _63;
    };
});
var ordAll = new Prelude.Ord(function () {
    return eqAll;
}, function (_66) {
    return function (_67) {
        return Prelude.compare(Prelude.ordBoolean)(_66)(_67);
    };
});
module.exports = {
    All: All, 
    runAll: runAll, 
    eqAll: eqAll, 
    ordAll: ordAll, 
    showAll: showAll, 
    semigroupAll: semigroupAll, 
    monoidAll: monoidAll
};
